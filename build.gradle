plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.9"
    id("io.micronaut.aot") version "3.7.9"
}

version = "0.1"
group = "com.smartbros"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("jakarta.annotation:jakarta.annotation-api")
    compileOnly("org.graalvm.nativeimage:svm")
    runtimeOnly("ch.qos.logback:logback-classic")

    implementation 'com.google.zxing:javase:3.4.1'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    implementation 'org.openjfx:javafx-controls:20'
    implementation 'org.openjfx:javafx-fxml:20'
    implementation 'org.openjfx:javafx-swing:20'
    implementation 'org.controlsfx:controlsfx:11.1.2'
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
    implementation 'org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0'


}

//application { mainClass.set("com.smartbros.Application") }
java {
    sourceCompatibility = JavaVersion.toVersion("20")
    targetCompatibility = JavaVersion.toVersion("20")
}
graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.smartbros.*")
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = true
        convertYamlToJava = true
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}
configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute(module("io.micronaut:micronaut-jackson-databind"))
                .using(module("io.micronaut.serde:micronaut-serde-jackson:1.5.2"))
    }
}
javafx {
    version = '20'
    modules = ['javafx.controls', 'javafx.fxml',  'javafx.swing' ]
}
application {
    mainClass.set("com.smartbros.ServerGUI")
    println "UUU"
    applicationDefaultJvmArgs = [
            "--module-path", "${sourceSets.main.runtimeClasspath}",
            "--add-modules", "javafx.controls,javafx.fxml,javafx.swing"
    ]
}
shadowJar {
    archiveBaseName.set('YourAppName')
    archiveVersion.set('0.1.0')
    archiveClassifier.set('')
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': 'com.smartbros.ServerGUI'
    }

}
/*

$ ./gradlew shadowJar                                                                                        

$ java  \
--module-path ~/Downloads/javafx-sdk-20.0.1/lib  \
--add-modules javafx.swing,javafx.controls,javafx.fxml \
-jar build/libs/YourAppName-0.1.0.jar

$ cp build/libs/YourAppName-0.1.0.jar input

#first a few from javafx
$ jlink \                                                                                                    
--module-path  ~/Downloads/javafx-sdk-20.0.1/lib/ \            
--add-modules  javafx.swing,javafx.controls,javafx.fxml \
--output runtimewjavafx 

#then  add all jre mods
$ jlink \                                                                                                    
--module-path runtimewjavafx:$JAVA_HOME/jmods \                       
--add-modules ALL-MODULE-PATH \                                     
--output runtime-jre


$ jpackage --type dmg --input input --main-jar YourAppName-0.1.0.jar --main-class com.smartbros.Application \
--name YourAppName --java-options "--module-path  runtime-jre \
--add-modules ALL-MODULE-PATH" --runtime-image runtime --dest output

*/